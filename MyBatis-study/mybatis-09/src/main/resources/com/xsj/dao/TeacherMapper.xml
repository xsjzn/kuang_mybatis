<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xsj.dao.TeacherMapper">
    <!--按照结果嵌套处理 也就是关联查询-->
    <select id="getTeacherById" resultMap="TeacherStudent">
        select s.id s_id,s.name s_name,t.name t_name,t.id t_id
        from mybatis.student s,mybatis.teacher t
        where s.tid=t.id and t.id=${tid};
    </select>
    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="t_id"/>
        <result property="name" column="t_name"/>
        <!--复杂的属性，我们需要单独处理 对象： association 集合： collection
        javaType="" 指定属性的类型！
        集合中的泛型信息，我们使用ofType获取
        -->
        <collection property="students" ofType="Student">
            <result property="id" column="s_id"/>
            <result property="name" column="s_name"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>


    <!--按照查询嵌套处理 也就是子查询-->
    <select id="getTeacherById2" resultMap="TeacherStudent2">
        select * from mybatis.teacher where id= #{tid};
    </select>
    <resultMap id="TeacherStudent2" type="Teacher">
        <collection property="students" javaType="ArrayList" ofType="Student" column="id" select="getStudentByTeacherId"/>
    </resultMap>
    <select id="getStudentByTeacherId" resultType="Student">
        select * from mybatis.student where tid=#{tid};
    </select>
</mapper>
